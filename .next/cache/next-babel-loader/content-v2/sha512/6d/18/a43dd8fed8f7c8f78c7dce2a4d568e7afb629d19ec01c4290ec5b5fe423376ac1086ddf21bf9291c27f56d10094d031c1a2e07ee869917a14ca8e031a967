{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport pathReducer from './slices/pathSlice'; // ...\n\nconst store = configureStore({\n  reducer: {\n    path: pathReducer\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself\n\nexport default store;","map":{"version":3,"sources":["E:/Cyber/yudbet/maze meshane/react/lib/store.ts"],"names":["configureStore","pathReducer","store","reducer","path"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;;AAEA,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAC3BG,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEH;AADD;AADkB,CAAD,CAA5B,C,CAMA;;AAKA,eAAeC,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport pathReducer from './slices/pathSlice'\r\n// ...\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n      path: pathReducer\r\n  },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}